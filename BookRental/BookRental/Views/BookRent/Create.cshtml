@model BookRental.ViewModels.BookRentalViewModel
@using BookRental.Utility;

@{
    ViewBag.Title = "Create";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h3>Add new book rental</h3>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.EMail, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.EMail, new {id="email", @class = "form-control" } )
            @Html.ValidationMessageFor(model => model.EMail, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.Title, new { id = "bookTitle", @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ISBN, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.ISBN, new { id = "bookIsbn", @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ISBN, "", new { @class = "text-danger" })
        </div>
    </div>

    @{
        List<SelectListItem> listItems = new List<SelectListItem>();
        listItems.Add(new SelectListItem
        {
            Text = SD.OneMonth,
            Value = SD.OneMonthCount
        });
        listItems.Add(new SelectListItem
        {
            Text = SD.SixMonth,
            Value = SD.SixMonthCount
        });
    }

    <div class="form-group">
        @Html.LabelFor(model => model.RentalDuratioin, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.RentalDuratioin, listItems, new { id="ddlRentalDuration", @class = "form-control" } )
            @Html.ValidationMessageFor(model => model.ISBN, "", new { @class = "text-danger" })
        </div>
    </div>

    <div id="nameAndDob" style="display:none">
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Label(" ", new { id = "firstName", style = "width:350px;", @class = "form-control" } )
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BDay, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Label(" ", new { id = "BDate", style = "width:350px;", @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RentalPrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Label(" ", new { id = "lblRentalPrice", style = "width:350px;", @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Availability, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Label(" ", new { id = "lblAvailability", style = "width:350px;", @class = "form-control" })
            </div>
        </div>

    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="button" value="Check Availability" id="btnCheckAvailability" class="btn btn-sm btn-success"/>
            <input type="submit" value="Reserve" id="btnSubmit" style="display:none;" class="btn btn-sm btn-success" />
        </div>
    </div>
</div>
}

@section scripts
{
    <script>
        $(document).ready(function ()
        {
            // constructs the suggestion engine
            var customers = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('email'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                // `states` is an array of state names defined in "The Basics"
                remote: {
                    url: '/API/UsersAPI?typeArg=email&queryArg=%QUERY',
                    wildcard:'%QUERY'
                }
            });

            $('#email').typeahead({highlight: true, minLength: 2 },
                {
                    name: 'customers',
                    display: 'Email',
                    source: customers
                });

            var bookTitle = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('Title'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                // `states` is an array of state names defined in "The Basics"
                remote: {
                    url: '/API/BookAPI?queryArg=%QUERY',
                    wildcard: '%QUERY'
                }
            });

            $('#bookTitle').typeahead({ highlight: true, minLength: 2 },
                {
                    name: 'bookTitle',
                    display: 'Title',
                    source: bookTitle
                });

            //$('#btnCheckAvailability').click(function () {
            //    var urlPath = '/api/BookAPI?typeArg=avail&isbnArg=1234';

            //    $.ajax({
            //        url: urlPath,
            //        type: 'GET',
            //        dataType: 'json',
            //        success: function (data, textstatus, xhr) {
            //            console.log("Click1");
            //        },
            //    });
            //});

        });

        $('#btnCheckAvailability').click(function ()
        {
            var isbn = document.getElementById("bookIsbn").value;
            var email = document.getElementById("email").value;
            var rentalD = document.getElementById("ddlRentalDuration").value;
            var url1Path = '/api/BookAPI?typeArg=avail&isbnArg=' + isbn;
            var url2Path = '/api/BookAPI?typeArg=price&isbnArg=' + isbn + '&rentalArg=' + rentalD + '&emailArg=' + email;
            var url3Path = '/api/UsersAPI?typeArg=name&queryArg=' + email;


            $.ajax({
                url: url1Path,
                type: 'GET',
                dataType: 'json',
                success: function (data, textstatus, xhr)
                {
                    $('#lblAvailability').text(data + ' available')

                    var btnSubmit = document.getElementById("btnSubmit");

                    if (data > 0)
                    {
                        btnSubmit.style.display = '';
                    }
                    else
                    {
                        btnSubmit.style.display = '';
                        btnSubmit.value = 'Not available';
                        btnSubmit.display = true;
                        btnSubmit.classList.remove = 'btn-success';
                        btnSubmit.classList.add = 'btn-danger';
                    }
                },
                error: function (data, textstatus, errorThrown)
                {
                },
            });

            $.ajax({
                url: url2Path,
                type: 'GET',
                dataType: 'json',
                success: function (data, textstatus, xhr)
                {
                    $('#lblRentalPrice').text(data);
                },
                error: function (data, textstatus, errorThrown)
                {
                }
            });

            $.ajax({
                url: url3Path,
                type: 'GET',
                dataType: 'json',
                success: function (data, textstatus, xhr)
                {
                    var fields = data.split(';');
                    var date = fields[1].split(' ');

                    $('#firstName').text(fields[0]);
                    $('#BDate').text(date[0]);

                    document.getElementById("btnCheckAvailability").style.display = 'none';
                    document.getElementById("nameAndDob").style.display = '';
                },
                error: function (data, textstatus, errorThrown)
                {
                }
            });

        });


    </script>
}

